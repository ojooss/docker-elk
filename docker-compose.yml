version: '3.2'

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000"
      - "5044:5044"
      - "5045:5045"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  filebeat:
    image: bargenson/filebeat
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    environment:
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5044
      - SHIPPER_NAME=aWonderfulName
    networks:
      - elk

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx:/var/log/nginx
    networks:
      - elk

  filebeat2:
    image: docker.elastic.co/beats/filebeat:7.2.0
    volumes:
      - ./nginx:/var/log/nginx
    command: >
      ./filebeat -e -c /etc/motd
      -E "filebeat.inputs=[{type:log,paths:['/var/log/nginx/access.log','/var/log/nginx/error.log']}]"
      -E "output.logstash.hosts=['logstash:5045']"
    networks:
      - elk


networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
